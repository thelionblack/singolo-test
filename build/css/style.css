@charset "UTF-8";

@font-face {
  font-family: Lato;
  font-style: normal;
  font-weight: 300;
  src: url(./font/Lato-Light.ttf) format("ttf");
}

@font-face {
  font-family: Lato;
  font-style: normal;
  font-weight: 400;
  src: url(./font/Lato-Regular.ttf) format("ttf");
}

@font-face {
  font-family: Lato;
  font-style: normal;
  font-weight: 700;
  src: url(./font/Lato-Bold.ttf) format("ttf");
}

@font-face {
  font-family: Lato;
  font-style: normal;
  font-weight: 900;
  src: url(./font/Lato-Black.ttf) format("ttf");
}

body,
div,
dl,
dt,
dd,
ul,
li,
h1,
h2,
h3,
h4,
h5,
h6,
pre,
code,
form,
fieldset,
input,
textarea,
p,
blockquote,
th,
td {
  margin: 0;
  padding: 0;
}

ul li {
  list-style: none;
}

a {
  text-decoration: none;
}

* {
  box-sizing: border-box;
}

html {
  font-size: 10px;
}

body {
  font-family: "Lato", sans-serif;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 100%;
}

.wrapper {
  max-width: 94rem;
  margin: 0 auto;
}

.header {
  background-color: #2d303a;
  border-bottom: 6px solid #323746;
}

.header__inner {
  padding: 2.9rem 0;
  display: flex;
  justify-content: space-between;
  align-items: baseline;
  text-transform: uppercase;
}

.header__logo {
  font-size: 2.5rem;
  font-weight: 700;
  letter-spacing: -0.1rem;
}

.header__logo h2 {
  display: inline-block;
  color: #fff;
}

.header__logo span {
  display: inline-block;
  color: #f06c64;
}

.nav__block {
  width: 37.2rem;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  text-transform: uppercase;
}

.nav__block .nav__item {
  position: relative;
}

.nav__block .nav__item::after {
  content: "Â·";
  font-size: 1.2rem;
  position: absolute;
  color: #494e62;
  top: 0;
  right: -1.7rem;
}

.nav__block .nav__item:last-child::after {
  content: none;
}

.nav__block a {
  color: #fff;
  font-size: 1.2rem;
  font-weight: 700;
  transition: all 0.5s linear;
}

.nav__block a:hover {
  color: #f06c64;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
